#+TITLE:      requests v0.2.2 源码阅读
#+AUTHOR:     rgb-24bit
#+EMAIL:      rgb-24bit@foxmail.com

* 目录                                                    :TOC_4_gh:noexport:
- [[#v022][v0.2.2]]
- [[#v023][v0.2.3]]
- [[#v024][v0.2.4]]
- [[#v02x][v0.2.x]]

* v0.2.2
  这个版本的变化主要集中在 ~core.py~ 文件中。

  这时才发现， ~Requests~ 类的属性的值的定义是在外部确定的， 而不是传参
  到构造函数。

  之前没感觉， 这次功能的添加， 让我看到了这样做的好处。

  不需要对函数接口进行太多的修改， 添加属性只需要添加一行代码就足够了。

  #+BEGIN_EXAMPLE
    +               self.cookiejar = None
  #+END_EXAMPLE

  之前写代码都是尽量将所有属性塞到构造函数的参数里面。

  然后修改参数的时候， 参数一多就很麻烦。

  PS: 这个版本还是和 ~v0.2.1~ 在同一天......

* v0.2.3
  这个版本的变化不大， 但是却也添加了新的功能。

  + 魔法方法 ~__nonzero__~
    这次添加功能用到了这个方法， 这个方法的作用是：
    : 用于将类转换为布尔值， 通常在用类进行判断和将类转换成布尔值时调用

    #+BEGIN_SRC python :results output
      class A:
          def __nonzero__(self):
              print 'A._nonzero__()'
              return True


      print 'A is not zero' if A() else 'A is zero'
      print bool(A())
    #+END_SRC

    #+RESULTS:
    : A._nonzero__()
    : A is not zero
    : A._nonzero__()
    : True

  
  感觉功能的添加好简洁......

* v0.2.4
  还是 ~core.py~, 开头添加了：
  #+BEGIN_SRC python
    from __future__ import absolute_import
  #+END_SRC

  嗯， 古老的版本......

  紧跟：
  #+BEGIN_SRC python
    import urllib2

    from urllib2 import HTTPError
  #+END_SRC
  
  上一个版本没注意， 看来导入这件事可以灵活点处理的。

  emmm...
  #+BEGIN_SRC python
    def __init__(self, url=None, headers=dict(), files=None, method=None,
                 params=dict(), data=dict(), auth=None, cookiejar=None):
  #+END_SRC
  和 ~v0.2.2~ 版本的做法相反， 到底那个好...
  
  *2018-03-13 更新：* 看了以前自己的代码， 全是位置参数...
  不说了...
  
* v0.2.x
  emmm, 直接 ~git co v0.2.5~ 出错了， 下一个版本直接是
  ~v0.3.0~ 了......

