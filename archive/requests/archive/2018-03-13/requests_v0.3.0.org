#+TITLE:      requests v0.3.0 源码阅读
#+AUTHOR:     rgb-24bit
#+EMAIL:      rgb-24bit@foxmail.com

* 目录                                                    :TOC_4_gh:noexport:
- [[#v030][v0.3.0]]
  - [[#asyncpy][async.py]]
  - [[#corepy][core.py]]
  - [[#other][other]]

* v0.3.0
  *PS:* 由于版本对比需要频繁使用 ~git diff~, 发现， ~git diff 低版本 高版本~ 的命令格式
  的输出要好看一些。

** async.py
   这个版本的新增文件 ~async.py~, 这个模块的核心是在处理导入 ~eventlet~ 这个模块上。

   当然了， 这个模块的作用我不是很清楚， 但是他对判断模块是否导入成功的方式感觉很有意思。
   #+BEGIN_SRC python
     if not 'eventlet' in locals():
         raise ImportError('No Async adaptations of urllib2 found!')
   #+END_SRC
   
   函数 ~locals()~, 与之对应的是 ~globals()~, 分别返回局部和全局命名空间的变量和值的字典。

   这两个函数我一直感觉没什么用， 现在看来， 只是用不到......

** core.py
   emmm, 看了一下， ~v0.3.0~ 版本这个文件开头删除的内容：
   #+BEGIN_EXAMPLE
     -try:
     -    import eventlet
     -    eventlet.monkey_patch()
     -except ImportError:
     -    pass
     -
     -if not 'eventlet' in locals():
     -    try:
     -        from gevent import monkey
     -        monkey.patch_all()
     -    except ImportError:
     -        pass
   #+END_EXAMPLE
   
   这一部分是移除到 ~async.py~ 中了， 各模块各司其职 ？

   代码删删改改， 新的版本功能更强大， 但是也增加了对类型的检查。 越来越复杂了。

   添加了一个静态方法， 是对 ~url~ 进行构建。 这样， 对 ~url~ 的构建就不需要单独导入 ~urlparse~ 模块了。
   
   部分获取属性值的地方由直接获取值改为了 ~getattr()~ 的方式。

** other
   感觉到这个地方源码的阅读有些困难了......

   虽然前几天专门去学习了一下 ~urllib~ 相关模块的知识， 但是， ~request~ 用到的内容明显更多。

   唉~

