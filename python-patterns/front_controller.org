#+TITLE:      front_controller
#+AUTHOR:     rgb-24bit
#+EMAIL:      rgb-24bit@foxmail.com

* Table of Contents                                       :TOC_4_gh:noexport:
- [[#文档][文档]]
- [[#代码][代码]]
- [[#输出][输出]]
- [[#理解][理解]]

* 文档
  #+BEGIN_SRC python
    """
    @author: Gordeev Andrey <gordeev.and.and@gmail.com>

    *TL;DR80
    Provides a centralized entry point that controls and manages request handling.
    """
  #+END_SRC
  
* 代码
  #+BEGIN_SRC python
    class MobileView(object):

        def show_index_page(self):
            print('Displaying mobile index page')


    class TabletView(object):

        def show_index_page(self):
            print('Displaying tablet index page')


    class Dispatcher(object):

        def __init__(self):
            self.mobile_view = MobileView()
            self.tablet_view = TabletView()

        def dispatch(self, request):
            if request.type == Request.mobile_type:
                self.mobile_view.show_index_page()
            elif request.type == Request.tablet_type:
                self.tablet_view.show_index_page()
            else:
                print('cant dispatch the request')


    class RequestController(object):
        """ front controller """

        def __init__(self):
            self.dispatcher = Dispatcher()

        def dispatch_request(self, request):
            if isinstance(request, Request):
                self.dispatcher.dispatch(request)
            else:
                print('request must be a Request object')


    class Request(object):
        """ request """

        mobile_type = 'mobile'
        tablet_type = 'tablet'

        def __init__(self, request):
            self.type = None
            request = request.lower()
            if request == self.mobile_type:
                self.type = self.mobile_type
            elif request == self.tablet_type:
                self.type = self.tablet_type


    if __name__ == '__main__':
        front_controller = RequestController()
        front_controller.dispatch_request(Request('mobile'))
        front_controller.dispatch_request(Request('tablet'))

        front_controller.dispatch_request(Request('desktop'))
        front_controller.dispatch_request('mobile')
  #+END_SRC

* 输出
  #+BEGIN_EXAMPLE
    ### OUTPUT ###
    # Displaying mobile index page
    # Displaying tablet index page
    # cant dispatch the request
    # request must be a Request object
  #+END_EXAMPLE

* 理解
  *前端控制器模式* 提供一个集中的请求处理机制， 所有的请求都将由一个单一的处理程序处理。

  该模式由三部分组成：
  + *前端控制器(Front Controller)*: 处理应用程序所有类型请求的单个处理程序。
  + *调度器(Dispatcher)*: 前端控制器可能使用一个调度器对象来调度请求到相应的具体处理程序
  + *视图(View)*: 视图是为请求而创建的对象

  #+BEGIN_SRC python
    # -*- coding: utf-8 -*-

    class LoginView(object):
        def show(self):
            print('Login successful')


    class LogoutView(object):
        def show(self):
            print('Logout successful')


    class Dispatcher(object):
        def __init__(self):
            self.login_view = LoginView()
            self.logout_view = LogoutView()

        def dispatch(self, request):
            if request.type == Request.login_type:
                self.login_view.show()
            elif request.type == Request.logout_type:
                self.logout_view.show()
            else:
                print('cant dispatch the request')


    class RequestController(object):
        """front controller."""
        def __init__(self):
            self.dispatcher = Dispatcher()

        def dispatch_request(self, request):
            if isinstance(request, Request):
                self.dispatcher.dispatch(request)
            else:
                print('request must be a Request object')


    class Request(object):
        """request."""
        login_type = 'login'
        logout_type = 'logout'

        def __init__(self, request):
            self.type = None

            request = request.lower()
            if request == self.login_type:
                self.type = self.login_type

            elif request == self.logout_type:
                self.type = self.logout_type


    if __name__ == '__main__':
        front_controller = RequestController()
        front_controller.dispatch_request(Request('login'))
        front_controller.dispatch_request(Request('logout'))

        front_controller.dispatch_request(Request('register'))
        front_controller.dispatch_request('login')
  #+END_SRC
  
  执行结果：
  #+BEGIN_EXAMPLE
    Login successful
    Logout successful
    cant dispatch the request
    request must be a Request object
  #+END_EXAMPLE

